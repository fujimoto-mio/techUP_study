①index.php
require_once 'Patient.php';
外部のPatient.phpを読み込む

<!DOCTYPE html>
<html lang="ja">
	<meta charset="utf-8">
	<head>
		<title>techUP　オブジェクト指向　課題</title>
	</head>
	<body>
HTMLの開始文

$patient = new Patient('山田太郎', 30, 'm', 1.65, 63.5);
このコードはインスタンスの生成。
患者の情報を持つオブジェクト

print($patient -> selfIntroduction());

print('<br>身長：' . $patient -> getHeight() . 'm');
print('<br>体重：' . $patient -> getWeight() . 'kg');
print('標準体重は' . $patient -> calculateStandardWeight() . 'kgです。');
それぞれ身長、体重、標準体型を返すメソッド
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

②Patient.php
require_once 'Person.php';
外部のPerson.phpを読み込む

class Patient extends Person
	private $height = 0;
	private $weight = 0;
Patient が Personを継承
身長、体重のプロパティの追加

public function __construct($name, $age, $gender, $height, $weight){
	parent::__construct($name, $age, $gender);
	$this -> height = $height;
	$this -> weight = $weight;
Personクラスのコンストラクタを呼び出す。
身長、体重のプロパティの初期化

public function calculateStandardWeight(){
        return $this -> height * $this -> height * 22;
患者の身長から計算される標準体重を返すメソッド

public function getHeight(){
        return $this -> height;}
public function getWeight(){
        return $this -> weight;}
患者の身長と体重を返すメソッド
＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿

③Person.php
class Person{
    private $name = '';
    private $age = 0;
    private $gender = '';
名前、年齢、性別のプロパティはprivateでアクセス可能

public function __construct($name, $age, $gender){
        $this -> name = $name;
        $this -> age = $age;
        $this -> gender = $gender;}
Person クラスのインスタンスを初期化


public function selfIntroduction(){
	if($this -> gender == 'm'){
            $gendata = '男性';
       	}else if($this -> gender == 'f'){
            $gendata = '女性';
        }else{
            $gendata = '[性別は不明]';
        }
        return 'わたしは' . $this -> name . '、' . $this -> age . '才、' . $gendata . 'です。';}
$this->genderがmの場合は男性、ｆの場合は女性、それ以外は性別は不明を$gendataに返します。

public function addAge(){
        $this -> age++;}
年齢を1つ増やすためのメソッド。Personの年齢が1つ増える。

